# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: product-service
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-1

  environment:
    PG_HOST: cloud-aws-program.cxq4iag33xql.eu-west-1.rds.amazonaws.com
    PG_PORT: 5432
    PG_DATABASE: products
    PG_USERNAME: postgress
    PG_PASSWORD: lRPkMs8fyqmnf5p26HYN

# you can add statements to the Lambda function's IAM Role here
#  iam:
#    role:
#      statements:
#        - Effect: "Allow"
#          Action:
#            - "s3:ListBucket"
#          Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#        - Effect: "Allow"
#          Action:
#            - "s3:PutObject"
#          Resource:
#            Fn::Join:
#              - ""
#              - - "arn:aws:s3:::"
#                - "Ref" : "ServerlessDeploymentBucket"
#                - "/*"

# you can add packaging information here
#package:
#  patterns:
#    - '!exclude-me.js'
#    - '!exclude-me-dir/**'
#    - include-me.js
#    - include-me-dir/**

functions:
  getProductsList:
    handler: handler.getProductsList
    events:
      - http:
          path: /products
          method: get
          cors: true
          responses:
            200:
              description: Receiving list of all products
            500:
              description: Internal server error
  getProductById:
    handler: handler.getProductById
    events:
      - http:
          path: /products/{productId}
          method: get
          cors: true
          responses:
            200:
              description: Receiving particular product by id
            404:
              description: Product with current id is not found
            500:
              description: Internal server error
  createProduct:
    handler: handler.createProduct
    events:
      - http:
          path: /products
          method: post
          cors: true
          responses:
            200:
              description: Product successfully created
            400:
              description: Invalid data was received
            500:
              description: Internal server error



#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"

plugins:
  - serverless-webpack
  - serverless-auto-swagger

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    packager: 'npm'
    includeModules: false
